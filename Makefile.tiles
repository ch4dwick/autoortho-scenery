SPLITSIZE?=125
SHELL=/bin/bash
ZL?=16

TILENAME?=test

# This variable is expected to be null if the tile list has not yet been split
TILES:=$(addprefix z_$(TILENAME)_, $(shell ls $(TILENAME)_tile_list.* 2>/dev/null | awk -F. '{ print $$2 }') ) 
ZIPS=$(addsuffix .zip, $(TILES))

# Get the tiles listed in each list file
.SECONDEXPANSION:
# This variable is expected to be null if the tile list has not yet been split
TILE_FILES=$(addsuffix .dsf, $(addprefix Ortho4XP/Tiles/*/*/*/, $(basename $(shell cat $(TILENAME)_tile_list.$* 2>/dev/null ) ) ) )
#TILE_FILES=$(basename $(shell cat $(TILENAME)_tile_list.$* ) )


all: $(ZIPS)

z_$(TILENAME)_%: $(TILENAME)_tile_list.% $${TILE_FILES}
	@echo "[$@]"
	@echo "Expected tile len:"
	@cat $< | wc -l
	@echo "Actual tile len:"
	@unzip -l $@.zip *.dsf | grep dsf | wc -l
	
z_$(TILENAME)_%.zip.info: z_$(TILENAME)_%.zip
	@echo "[$@]"
	@echo "-----------------------------------"
	@echo "Post processing info:"
	@comm --total -3  <( unzip -l $(basename $@) *.dsf | awk -F/ '/.*\.dsf/ { print $$4 }' | sort ) <( cat $(TILENAME)_tile_list.$* | sort )
	@echo "-----------------------------------"
	@export EXPECTED=$$(cat $(TILENAME)_tile_list.$* | wc -l); \
		export ACTUAL=$$(unzip -l $(basename $@) *.dsf | grep dsf | wc -l); \
		echo "Expected tile len: $$EXPECTED"; \
		echo "Actual tile len: $$ACTUAL"; \
	[ $$EXPECTED -eq $$ACTUAL ]
#
# Ortho4XP setup
#

# ortho4xp.diff:
# 	cd Ortho4XP && git diff > ../ortho4xp.diff

Ortho4XP:
	@echo "[$@]"
	git clone --depth=1 https://github.com/oscarpilote/Ortho4XP.git
#	cd $@ && patch -p1 -u < ../ortho4xp.diff
	cp Ortho4XP.cfg $@/.
	cd $@
	mkdir $@/tmp


#$(TILENAME)_tile_list.%: $(TILENAME)_tile_list_chunks
$(TILENAME)_tile_list_chunks: $(TILENAME)_tile_list
	@echo "[$@]"
	split $< -d -l $(SPLITSIZE) $<.
	

#
# Tile pack setup
#

#Ortho4XP/Tiles/zOrtho4XP_%: Ortho4XP/Tiles/zOrtho4XP_%/.done
#.PHONY: %.dsf
#%.dsf: Ortho4XP/Tiles/zOrtho4XP_%/.done
#	echo $<
#Ortho4XP/Tiles/zOrtho4XP_%/.done: Ortho4XP 
Ortho4XP/Tiles/*/*/*/%.dsf: Ortho4XP
	@echo "[$@]"
	@echo "Make tile $*"	
	@echo "Setup per tile config, if possible"
	mkdir -p Ortho4XP/Tiles/zOrtho4XP_$*
	-cp Ortho4XP_$*.cfg Ortho4XP/Tiles/zOrtho4XP_$*/.
	@echo "Make tile $(@)" 
	set -e;\
	export COORDS=$$(echo $(@) | sed -e 's/.*\/\([-+][0-9]\+\)\([-+][0-9]\+\).dsf/\1 \2/g');\
	echo $$COORDS; \
 	cd $< && python3 Ortho4XP.py $$COORDS BI $(ZL) || ( echo "ERROR DETECTED! Retry tile $@ with noroads config."; cp $(CURDIR)/Ortho4XP_noroads.cfg $(CURDIR)/Ortho4XP/Tiles/zOrtho4XP_$*/Ortho4XP_$*.cfg && python3 Ortho4XP.py $$COORDS BI $(ZL) )
	#touch $@

.SECONDARY: $(TILE_FILES) 

# Static pattern rule for the zip files
$(ZIPS): z_%.zip: z_%
	@echo "[$@]"
	mkdir -p $<
	cp -r Ortho4XP/Tiles/zOrtho4XP_*/'Earth nav data' $</.
	cp -r Ortho4XP/Tiles/zOrtho4XP_*/terrain $</.
	cp -r Ortho4XP/Tiles/zOrtho4XP_*/textures $</.
	zip -r $@ $<
	
%.sha256: %
	@echo "[$@]"
	sha256sum $< > $@

clean:
	@echo "[$@]"
	-rm -rf Ortho4XP
	-rm $(ZIPS)
	-rm -rf z_$(TILENAME)
	-rm -rf z_$(TILENAME)_*
	-rm $(TILENAME)_tile_list.*
